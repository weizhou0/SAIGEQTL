# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: lint

permissions: read-all

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Install dependencies
        run: |
          sudo apt-get update && \
          sudo apt-get install -y \
          cmake \
          libopenblas-base

          # https://github.com/parandor/samples/blob/2028ca7a23757a4df2344404fa68684cf1cd6f92/.github/workflows/build_libraries.yaml#L24
          # Install Python packages using pip
          pip3 install cget

          # Install user's private bin path for cget
          CGET_DIR="$HOME/.local/bin"
          PROFILE_DIR="$HOME/.profile"
          # Check if the directory is not already in the profile
          if ! grep -qF "$CGET_DIR" "$PROFILE_DIR"; then
            echo "export PATH=\"\$PATH:$CGET_DIR\"" >> "$PROFILE_DIR"
          fi
          source $PROFILE_DIR

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::lintr, any::styler, any::roxygen2, local::.
          needs: lint, styler
      
      - name: Enable styler cache
        run: styler::cache_activate()
        shell: Rscript {0}

      - name: Determine cache location
        id: styler-location
        run: |
          cat(
            "location=",
            styler::cache_info(format = "tabular")$location,
            "\n",
            file = Sys.getenv("GITHUB_OUTPUT"),
            append = TRUE,
            sep = ""
          )
        shell: Rscript {0}

      - name: Cache styler
        uses: actions/cache@v4
        with:
          path: ${{ steps.styler-location.outputs.location }}
          key: ${{ runner.os }}-styler-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-styler-
            ${{ runner.os }}-

      - name: Style
        run: |
          styler::style_pkg()
          styler::style_dir("extdata")
        shell: Rscript {0}

      - name: Commit and push changes
        run: |
          if FILES_TO_COMMIT=($(git diff-index --name-only ${{ github.sha }} \
              | egrep --ignore-case '\.(R|[qR]md|Rmarkdown|Rnw|Rprofile)$'))
          then
            git config --local user.name "$GITHUB_ACTOR"
            git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
            git commit ${FILES_TO_COMMIT[*]} -m "Style code (GHA)"
            git pull --ff-only
            git push origin
          else
            echo "No changes to commit."
          fi

      - name: Lint
        run: lintr::lint_package()
        shell: Rscript {0}
        env:
          LINTR_ERROR_ON_LINT: false
